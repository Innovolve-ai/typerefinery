{
  "name": "typerefinery",
  "description": "Visualisation workbench for TypeDB",
  "productName": "TypeRefinery",
  "productAppId": "appId",
  "electronWindowTitle": "TypeRefinery",
  "companyName": "Innovolve.ai",
  "author": "TypeRefinery.ai",
  "version": "2022.7.4",
  "appWidth": 1366,
  "appHeight": 768,
  "proxy": "http://127.0.0.1:8000",
  "env": {
    "VITE_DEV_SERVER_HOST": "localhost",
    "VITE_DEV_SERVER_PORT": 3000,
    "VITE_DEV_SERVER_SCHEMA": "http",
    "NODE_ENV": "production",
    "CRASH_REPORTED_ENABLED": true,
    "CRASH_REPORTER_SUBMIT_URL": "https://o1271501.ingest.sentry.io/api/6463906/minidump/?sentry_key=11633f20925d4be2ba055e901f7d95e3",
    "ERROR_REPORT_ENABLED": true,
    "ERROR_REPORT_SENTURY_DSN": "https://11633f20925d4be2ba055e901f7d95e3@o1271501.ingest.sentry.io/6463906",
    "ERROR_REPORT_LEVEL": [
      "error",
      "war,ning",
      "info",
      "debug"
    ],
    "LOCAL_SERVICES_PATH": "./services",
    "LOCAL_SERVICES_USERDATA_PATH": "services"
  },
  "scripts": {
    "build": "vue-tsc --noEmit && vite build && node scripts/build.mjs",
    "test:unit": "vitest",
    "test:e2e": "start-server-and-test preview 8080 'cypress open'",
    "lint:script": "eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore",
    "lint:style": "stylelint src/**/*.{css,scss,vue}",
    "dev": "vite --host localhost",
    "electron": "wait-on -c .waiton.json --verbose http-get://localhost:3000 && cross-env NODE_ENV=dev electron ./dist/main/index.cjs",
    "electron:pack": "electron-builder --dir",
    "electron:dev": "concurrently -k \"npm run build && npm run dev\" \"npm run electron\"",
    "electron:builder": "electron-builder",
    "electron:start": "node scripts/build.mjs && electron ./dist/main/index.cjs",
    "electron:run": "electron ./dist/main/index.cjs",
    "app:build": "npm run build && npm run electron:builder",
    "postinstall": "electron-builder install-app-deps",
    "postuninstall": "electron-builder install-app-deps",
    "preview": "vite preview --port 8080 --host 0.0.0.0",
    "test:e2e:ci2": "start-server-and-test preview 8080 'cypress run'",
    "test:e2e:ci3": "start-server-and-test dev2 http-get://localhost:3000 test:ci",
    "test:e2e:ci": "concurrently -k \"cross-env BROWSER=none npm run preview\" \"wait-on -c .waiton.json http://localhost:8080 && cypress run\"",
    "typecheck": "vue-tsc --noEmit && vue-tsc --noEmit -p tsconfig.vitest.json --composite false",
    "test": "npm run report:clean && cypress run",
    "test:ci": "npm run report:clean && cypress run --record --config baseUrl=http://localhost:8080",
    "report:clean": "rm -rf cypress/results cypress/screenshots cypress/videos cypress/reports || true",
    "report:merge": "echo merge && mochawesome-merge cypress/results/*.json -o cypress/reports/report.json",
    "report:generate": "echo generate && marge cypress/reports/report.json -f report -o cypress/reports",
    "report:moveScreenshots": "echo moveScreenshots && cp -r cypress/screenshots cypress/reports/screenshots 2>/dev/null || true",
    "report:moveVideos": "echo moveVideos && cp -r cypress/videos cypress/reports/videos 2>/dev/null || true",
    "report:moveData": "echo moveData && cp -r cypress/results/data cypress/reports/data 2>/dev/null || true",
    "posttest": "npm run report:merge && npm run report:generate && npm run report:moveScreenshots && npm run report:moveVideos && npm run report:moveData",
    "services": "npx ts-node --esm electron/app/main/Services.ts",
    "servicesprod": "cross-env NODE_ENV=production npx ts-node --esm electron/app/main/Services.ts"
  },
  "main": "dist/main/index.cjs",
  "dependencies": {
    "@achrinza/node-ipc": "^10.1.6",
    "@codemirror/lang-javascript": "^6.0.0",
    "@codemirror/lang-python": "^6.0.0",
    "@codemirror/theme-one-dark": "^6.0.0",
    "@mdi/font": "5.9.55",
    "@rauschma/stringio": "^1.4.0",
    "@sentry/electron": "^3.0.7",
    "@sentry/integrations": "^7.1.1",
    "@sentry/types": "^7.1.1",
    "@types/i18next-node-fs-backend": "^2.1.1",
    "@vuelidate/core": "^2.0.0-alpha.41",
    "@vuelidate/validators": "^2.0.0-alpha.29",
    "axios": "^0.27.2",
    "codemirror": "^6.0.0",
    "core-js": "^3.8.3",
    "d3": "^4.13.0",
    "dotenv": "^16.0.0",
    "electron-context-menu": "^3.1.2",
    "electron-log": "^4.4.7",
    "electron-updater": "^5.0.1",
    "electron-window-state": "^5.0.3",
    "eventemitter3": "^4.0.7",
    "execa": "^5.1.1",
    "express": "^4.18.1",
    "get-port": "^6.1.2",
    "glob": "^8.0.3",
    "i18next": "^21.6.16",
    "i18next-fs-backend": "^1.1.4",
    "i18next-node-fs-backend": "^2.1.3",
    "monaco-editor": "^0.33.0",
    "node-fetch": "^3.2.6",
    "p-retry": "^5.1.1",
    "portfinder": "^1.0.28",
    "primeflex": "^3.1.3",
    "primeicons": "^5.0.0",
    "primevue": "^3.12.2",
    "register-service-worker": "^1.7.2",
    "roboto-fontface": "*",
    "splitpanes": "^3.1.1",
    "tree-kill": "^1.2.2",
    "vue": "^3.2.31",
    "vue-codemirror": "^6.0.0",
    "vue-i18n": "^9.1.9",
    "vue-material-design-icons": "^5.0.0",
    "vue-router": "^4.0.12",
    "vuelidate": "^0.7.7",
    "vuex": "^4.0.0",
    "vuex-module-decorators": "^2.0.0",
    "vuex-persist": "^3.1.3",
    "webcola": "^3.4.0",
    "webfontloader": "^1.0.0",
    "winston": "^3.7.2"
  },
  "devDependencies": {
    "@rollup/plugin-node-resolve": "^13.3.0",
    "@rollup/plugin-typescript": "^8.3.2",
    "@rushstack/eslint-patch": "^1.1.0",
    "@types/electron-devtools-installer": "^2.2.1",
    "@types/jsdom": "^16.2.14",
    "@types/node": "^17.0.18",
    "@types/vue-i18n": "^7.0.0",
    "@types/vuelidate": "^0.7.15",
    "@types/webfontloader": "^1.0.0",
    "@typescript-eslint/eslint-plugin": "^5.4.0",
    "@typescript-eslint/parser": "^5.4.0",
    "@vitejs/plugin-vue": "^1.10.2",
    "@vue/cli-plugin-e2e-cypress": "~5.0.0",
    "@vue/cli-plugin-eslint": "~5.0.0",
    "@vue/cli-plugin-pwa": "~5.0.0",
    "@vue/cli-plugin-router": "~5.0.0",
    "@vue/cli-plugin-typescript": "~5.0.0",
    "@vue/cli-plugin-vuex": "~5.0.0",
    "@vue/cli-service": "~5.0.0",
    "@vue/eslint-config-prettier": "^7.0.0",
    "@vue/eslint-config-typescript": "^9.1.0",
    "@vue/test-utils": "^2.0.0-0",
    "@vue/tsconfig": "^0.1.3",
    "concurrently": "^7.0.0",
    "cross-env": "^7.0.3",
    "cypress": "^10.0.1",
    "cypress-multi-reporters": "^1.5.0",
    "electron": "^19.0.0",
    "electron-builder": "^22.14.13",
    "electron-devtools-installer": "^3.2.0",
    "electron-notarize": "^1.2.1",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-vue": "^8.0.3",
    "jsdom": "^19.0.0",
    "lint-staged": "^11.2.6",
    "mocha": "^9.2.1",
    "mochawesome": "^7.0.1",
    "mochawesome-merge": "^4.2.1",
    "mochawesome-report-generator": "^6.0.1",
    "postcss-html": "^1.3.0",
    "prettier": "^2.4.1",
    "rollup": "^2.75.6",
    "rollup-plugin-copy": "^3.4.0",
    "rollup-plugin-inject-process-env": "^1.3.1",
    "rollup-plugin-postcss": "^4.0.2",
    "rollup-plugin-serve": "^1.1.0",
    "rollup-plugin-svg": "^2.0.0",
    "rollup-plugin-vue": "^6.0.0",
    "sass": "^1.38.0",
    "sass-loader": "^12.0.0",
    "simple-git-hooks": "^2.7.0",
    "start-server-and-test": "^1.14.0",
    "stylelint": "^14.5.1",
    "stylelint-config-recommended": "^7.0.0",
    "stylelint-config-standard": "^25.0.0",
    "typed-emitter": "^2.1.0",
    "typescript": "~4.7.2",
    "vite": "^2.9.12",
    "vitest": "^0.6.1",
    "vue-cli-plugin-electron-builder": "~2.1.1",
    "vue-tsc": "^0.31.4",
    "wait-on": "^6.0.1"
  },
  "lint-staged": {
    "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
      "prettier --write"
    ]
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged"
  },
  "build": {
    "appId": "typerfinery",
    "copyright": "Copyright Â© 2022 ${author}",
    "asar": true,
    "mac": {
      "category": "public.app-category.utilities",
      "icon": "dist/main/assets/logo.icns"
    },
    "win": {
      "target": "nsis",
      "icon": "logo.png"
    },
    "nsis": {
      "menuCategory": false,
      "oneClick": true,
      "perMachine": false,
      "allowToChangeInstallationDirectory": false,
      "deleteAppDataOnUninstall": false,
      "runAfterFinish": true,
      "installerHeaderIcon": "dist/main/assets/icon.ico",
      "installerIcon": "dist/main/assets/icon.ico",
      "uninstallerIcon": "dist/main/assets/icon.ico"
    },
    "linux": {
      "target": "AppImage"
    },
    "deb": {
      "packageCategory": "devel"
    },
    "files": [
      "dist/**/*",
      "electron/static/**/*"
    ],
    "directories": {
      "buildResources": "electron/build",
      "output": "dist_electron"
    },
    "extraFiles": [
      "services/**/*"
    ],
    "publish": {
      "provider": "github",
      "repo": "typerefinery",
      "owner": "innovolve-ai",
      "releaseType": "release"
    }
  }
}
